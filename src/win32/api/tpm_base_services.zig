//! NOTE: this file is autogenerated, DO NOT MODIFY
//--------------------------------------------------------------------------------
// Section: Constants (27)
//--------------------------------------------------------------------------------
pub const TBS_CONTEXT_VERSION_ONE = @as(u32, 1);
pub const TBS_SUCCESS = @as(u32, 0);
pub const TBS_OWNERAUTH_TYPE_FULL = @as(u32, 1);
pub const TBS_OWNERAUTH_TYPE_ADMIN = @as(u32, 2);
pub const TBS_OWNERAUTH_TYPE_USER = @as(u32, 3);
pub const TBS_OWNERAUTH_TYPE_ENDORSEMENT = @as(u32, 4);
pub const TBS_OWNERAUTH_TYPE_ENDORSEMENT_20 = @as(u32, 12);
pub const TBS_OWNERAUTH_TYPE_STORAGE_20 = @as(u32, 13);
pub const TBS_CONTEXT_VERSION_TWO = @as(u32, 2);
pub const TPM_WNF_INFO_CLEAR_SUCCESSFUL = @as(u32, 1);
pub const TPM_WNF_INFO_OWNERSHIP_SUCCESSFUL = @as(u32, 2);
pub const TPM_WNF_INFO_NO_REBOOT_REQUIRED = @as(u32, 1);
pub const TPM_VERSION_UNKNOWN = @as(u32, 0);
pub const TPM_VERSION_12 = @as(u32, 1);
pub const TPM_VERSION_20 = @as(u32, 2);
pub const TPM_IFTYPE_UNKNOWN = @as(u32, 0);
pub const TPM_IFTYPE_1 = @as(u32, 1);
pub const TPM_IFTYPE_TRUSTZONE = @as(u32, 2);
pub const TPM_IFTYPE_HW = @as(u32, 3);
pub const TPM_IFTYPE_EMULATOR = @as(u32, 4);
pub const TPM_IFTYPE_SPB = @as(u32, 5);
pub const TBS_TCGLOG_SRTM_CURRENT = @as(u32, 0);
pub const TBS_TCGLOG_DRTM_CURRENT = @as(u32, 1);
pub const TBS_TCGLOG_SRTM_BOOT = @as(u32, 2);
pub const TBS_TCGLOG_SRTM_RESUME = @as(u32, 3);
pub const TBS_TCGLOG_DRTM_BOOT = @as(u32, 4);
pub const TBS_TCGLOG_DRTM_RESUME = @as(u32, 5);

//--------------------------------------------------------------------------------
// Section: Types (6)
//--------------------------------------------------------------------------------
pub const TBS_CONTEXT_PARAMS = extern struct {
    version: u32,
};

pub const TBS_CONTEXT_PARAMS2 = extern struct {
    version: u32,
    Anonymous: TBS_CONTEXT_PARAMS2._Anonymous_e__Union,
    const _Anonymous_e__Union = u32; // TODO: generate this nested type!
};

pub const tdTPM_WNF_PROVISIONING = extern struct {
    status: u32,
    message: [28]u8,
};

pub const TPM_DEVICE_INFO = extern struct {
    structVersion: u32,
    tpmVersion: u32,
    tpmInterfaceType: u32,
    tpmImpRevision: u32,
};

pub const Tbsip_Submit_Command_PriorityFlags = extern enum(u32) {
    LOW = 100,
    NORMAL = 200,
    SYSTEM = 400,
    HIGH = 300,
    MAX = 2147483648,
};
pub const TBS_COMMAND_PRIORITY_LOW = Tbsip_Submit_Command_PriorityFlags.LOW;
pub const TBS_COMMAND_PRIORITY_NORMAL = Tbsip_Submit_Command_PriorityFlags.NORMAL;
pub const TBS_COMMAND_PRIORITY_SYSTEM = Tbsip_Submit_Command_PriorityFlags.SYSTEM;
pub const TBS_COMMAND_PRIORITY_HIGH = Tbsip_Submit_Command_PriorityFlags.HIGH;
pub const TBS_COMMAND_PRIORITY_MAX = Tbsip_Submit_Command_PriorityFlags.MAX;

pub const Tbsip_Submit_Command_LocalityFlags = extern enum(u32) {
    ZERO = 0,
    ONE = 1,
    TWO = 2,
    THREE = 3,
    FOUR = 4,
};
pub const TBS_COMMAND_LOCALITY_ZERO = Tbsip_Submit_Command_LocalityFlags.ZERO;
pub const TBS_COMMAND_LOCALITY_ONE = Tbsip_Submit_Command_LocalityFlags.ONE;
pub const TBS_COMMAND_LOCALITY_TWO = Tbsip_Submit_Command_LocalityFlags.TWO;
pub const TBS_COMMAND_LOCALITY_THREE = Tbsip_Submit_Command_LocalityFlags.THREE;
pub const TBS_COMMAND_LOCALITY_FOUR = Tbsip_Submit_Command_LocalityFlags.FOUR;


//--------------------------------------------------------------------------------
// Section: Functions (13)
//--------------------------------------------------------------------------------
pub extern "tbs" fn Tbsi_Context_Create(
    pContextParams: *TBS_CONTEXT_PARAMS,
    phContext: **c_void,
) callconv(@import("std").os.windows.WINAPI) u32;

pub extern "tbs" fn Tbsip_Context_Close(
    hContext: *c_void,
) callconv(@import("std").os.windows.WINAPI) u32;

pub extern "tbs" fn Tbsip_Submit_Command(
    hContext: *c_void,
    Locality: Tbsip_Submit_Command_LocalityFlags,
    Priority: Tbsip_Submit_Command_PriorityFlags,
    pabCommand: [*:0]u8,
    cbCommand: u32,
    pabResult: [*:0]u8,
    pcbResult: *u32,
) callconv(@import("std").os.windows.WINAPI) u32;

pub extern "tbs" fn Tbsip_Cancel_Commands(
    hContext: *c_void,
) callconv(@import("std").os.windows.WINAPI) u32;

pub extern "tbs" fn Tbsi_Physical_Presence_Command(
    hContext: *c_void,
    pabInput: [*:0]u8,
    cbInput: u32,
    pabOutput: [*:0]u8,
    pcbOutput: *u32,
) callconv(@import("std").os.windows.WINAPI) u32;

pub extern "tbs" fn Tbsi_Get_TCG_Log(
    hContext: *c_void,
    pOutputBuf: ?[*:0]u8,
    pOutputBufLen: *u32,
) callconv(@import("std").os.windows.WINAPI) u32;

pub extern "tbs" fn Tbsi_GetDeviceInfo(
    Size: u32,
    Info: [*]u8,
) callconv(@import("std").os.windows.WINAPI) u32;

pub extern "tbs" fn Tbsi_Get_OwnerAuth(
    hContext: *c_void,
    ownerauthType: u32,
    pOutputBuf: ?[*:0]u8,
    pOutputBufLen: *u32,
) callconv(@import("std").os.windows.WINAPI) u32;

pub extern "tbs" fn Tbsi_Revoke_Attestation(
) callconv(@import("std").os.windows.WINAPI) u32;

pub extern "DSOUND" fn GetDeviceID(
    pbWindowsAIK: ?[*:0]u8,
    cbWindowsAIK: u32,
    pcbResult: *u32,
    pfProtectedByTPM: ?*BOOL,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

pub extern "tbs" fn GetDeviceIDString(
    pszWindowsAIK: ?[*:0]u16,
    cchWindowsAIK: u32,
    pcchResult: *u32,
    pfProtectedByTPM: ?*BOOL,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

pub extern "tbs" fn Tbsi_Create_Windows_Key(
    keyHandle: u32,
) callconv(@import("std").os.windows.WINAPI) u32;

pub extern "tbs" fn Tbsi_Get_TCG_Log_Ex(
    logType: u32,
    pbOutput: ?[*:0]u8,
    pcbOutput: *u32,
) callconv(@import("std").os.windows.WINAPI) u32;


//--------------------------------------------------------------------------------
// Section: Unicode Aliases (0)
//--------------------------------------------------------------------------------
pub usingnamespace switch (@import("../zig.zig").unicode_mode) {
    .ansi => struct {
    },
    .wide => struct {
    },
    .unspecified => if (@import("builtin").is_test) struct {
    } else struct {
    },
};
//--------------------------------------------------------------------------------
// Section: Imports (2)
//--------------------------------------------------------------------------------
const BOOL = @import("system_services.zig").BOOL;
const HRESULT = @import("com.zig").HRESULT;

test {
    const constant_export_count = 27;
    const type_export_count = 6;
    const enum_value_export_count = 10;
    const com_iface_id_export_count = 0;
    const com_class_id_export_count = 0;
    const func_export_count = 13;
    const unicode_alias_count = 0;
    const import_count = 2;
    @setEvalBranchQuota(
        constant_export_count +
        type_export_count +
        enum_value_export_count +
        com_iface_id_export_count * 2 + // * 2 for value and ptr
        com_class_id_export_count * 2 + // * 2 for value and ptr
        func_export_count +
        unicode_alias_count +
        import_count +
        2 // TODO: why do I need these extra 2?
    );
    @import("std").testing.refAllDecls(@This());
}
